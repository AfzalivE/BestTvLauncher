plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp' version '1.6.10-1.0.2'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.afzaln.besttvlauncher"
        minSdk 29
        targetSdk 31
        versionCode 1
        versionName "1.0"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            Properties keyProps = new Properties()
            File keyProperties = file('../signing.properties')
            if (keyProperties.exists()) {
                // when building locally, use signing properties from keystore.properties
                keyProps.load(new FileInputStream(keyProperties))
            } else {
                // when building CI server, use signing properties from environment variables
                def releaseProperties = System.getenv('RELEASE_SIGNING_PROPERTIES')
                keyProps.load(releaseProperties)
            }

            storeFile file(keyProps['store'])
            keyAlias keyProps['alias']
            storePassword keyProps['storePass']
            keyPassword keyProps['pass']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.1.0-rc02'
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    kotlin {
        sourceSets {
            debug {
                kotlin.srcDir("build/generated/ksp/debug/kotlin")
            }
            release {
                kotlin.srcDir("build/generated/ksp/release/kotlin")
            }
        }
    }
}

dependencies {

    implementation("androidx.core:core-ktx:1.7.0")
    implementation("androidx.leanback:leanback:1.0.0")
    implementation("com.github.bumptech.glide:glide:4.12.0")
    implementation("com.afzaln:android-tvprovider:1.1.0-alpha01-1.0.1")
    implementation("androidx.preference:preference-ktx:1.2.0")
    implementation("androidx.palette:palette-ktx:1.0.0")

    // Architecture
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.4.1")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.4.1")
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1")

    // Leanback
    implementation("androidx.leanback:leanback-preference:1.2.0-alpha02")

    // Compose
    implementation("androidx.activity:activity-compose:1.4.0")
    implementation("androidx.compose.ui:ui:$compose_version")
    implementation("androidx.compose.ui:ui-tooling-preview:$compose_version")
    implementation("androidx.compose.runtime:runtime-livedata:$compose_version")
    implementation("androidx.compose.material3:material3:1.0.0-alpha08")
    implementation("androidx.compose.material:material:$compose_version")
    implementation("androidx.compose.foundation:foundation:$compose_version")
    implementation("io.coil-kt:coil-compose:2.0.0-rc02")
    implementation("androidx.constraintlayout:constraintlayout-compose:1.0.0")

    // Voyager
    implementation("cafe.adriel.voyager:voyager-tab-navigator:$voyager_version")
    implementation("cafe.adriel.voyager:voyager-transitions:$voyager_version")

    // Debug
    implementation("com.squareup.logcat:logcat:0.1")

    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

}
